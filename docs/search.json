[
  {
    "objectID": "subgroups.html",
    "href": "subgroups.html",
    "title": "Uncovering Predictors of Gallstone Disease Across Age, Sex, and Obesity Subgroups",
    "section": "",
    "text": "Rather than building a single predictive model, this analysis focuses on subgroup-level exploration to identify how important predictors of gallstone disease may differ based on individual characteristics.\n\n\n\nUnderstand which predictors are most important within each subgroup using Gradient Boosted Machines (GBM).\nAssess whether predictors are positively or negatively associated with gallstone status using logistic regression coefficients.\nVisualize the top 8–15 variables per group to highlight contrasts between groups.\n\n\n\n\nExploring model results by subgroups allows us to: - Identify predictors that may be more relevant in specific populations (e.g., hepatic fat in older adults vs cholesterol in younger women). - Support personalized health recommendations by uncovering distinct risk profiles.\nThis approach aligns with precision medicine, which emphasizes tailoring diagnostics and interventions based on characteristics like age, sex, and body composition.\n\n\n\nTo examine whether predictive factors differ by sex, separate gradient boosting models were trained for males and females. As shown in the visualization below, C-Reactive Protein (CRP) emerged as the top predictor for both sexes, but its relative importance was much higher in females (100%) compared to males (also 100%, but with a smaller drop-off across other variables). Other predictors like Vitamin D, Extracellular Water, and Hemoglobin also showed distinct patterns between groups.\nKey Insight:\nCRP, Vitamin D, and protein-related metrics appear to be more influential in women, suggesting potential physiological or hormonal differences in gallstone susceptibility.\n\n\nCode\nlibrary(caret)\nlibrary(tidyverse)\nlibrary(forcats)\n\n\n# Extract and label variable importance\nmale_imp_df &lt;- varImp(gbm_male)$importance %&gt;%\n  rownames_to_column(\"Variable\") %&gt;%\n  left_join(labels_variables, by = c(\"Variable\" = \"name\")) %&gt;%\n  mutate(\n    Variable = coalesce(label, Variable),\n    Group = \"Male\"\n  ) %&gt;%\n  select(-label) %&gt;%\n  arrange(desc(Overall)) %&gt;%\n  head(8) %&gt;%\n  mutate(\n    Variable = factor(Variable, levels = rev(Variable)),\n    RelativeImportance = 100 * Overall / max(Overall)\n  )\n\nfemale_imp_df &lt;- varImp(gbm_female)$importance %&gt;%\n  rownames_to_column(\"Variable\") %&gt;%\n  left_join(labels_variables, by = c(\"Variable\" = \"name\")) %&gt;%\n  mutate(\n    Variable = coalesce(label, Variable),\n    Group = \"Female\"\n  ) %&gt;%\n  select(-label) %&gt;%\n  arrange(desc(Overall)) %&gt;%\n  head(8) %&gt;%\n  mutate(\n    Variable = factor(Variable, levels = rev(Variable)),\n    RelativeImportance = 100 * Overall / max(Overall)\n  )\n\n# Combine datasets\n# imp_sex_df &lt;- bind_rows(male_imp_df, female_imp_df)\n\n# Plot: Female\nfemale_plot &lt;- ggplot(female_imp_df, aes(x = Variable, y = RelativeImportance)) +\n  geom_col(fill = \"salmon\") +\n  geom_text(aes(label = paste0(round(RelativeImportance, 1), \"%\")),\n            hjust = 1.1, color = \"white\", size = 3) +\n  labs(\n    title = \"Top Predictors of Gallstones by Sex\",\n    subtitle = \"Female\",\n    y = NULL,\n    x = NULL\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(axis.text.y = element_text(size = 10),\n        plot.title.position = \"plot\",           # aligns title relative to plot, not panel\n        plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5) ) + \n  coord_flip()\n\n# Plot: Male\nmale_plot &lt;- ggplot(male_imp_df, aes(x = Variable, y = RelativeImportance)) +\n  geom_col(fill = \"steelblue\") +\n  geom_text(aes(label = paste0(round(RelativeImportance, 1), \"%\")),\n            hjust = 1.1, color = \"white\", size = 3) +\n  labs(\n    title = NULL,\n    subtitle = \"Male\",\n    y = \"Variable Importance (%)\",\n    x = NULL\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(axis.text.y = element_text(size = 10),\n        plot.title.position = \"plot\",           # aligns title relative to plot, not panel\n        plot.subtitle = element_text(hjust = 0.5) ) + \n  coord_flip()\n\n# Combine vertically\nfemale_plot / male_plot\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we stratified the dataset by obesity class—defined using body fat percentage—as Normal, Obese, and Severely Obese. Separate models for each group reveal that CRP remains a consistently strong predictor, but the relative importance of other features such as Triglycerides, ECF/TBW, and Hemoglobin varies across categories.\nKey Insight:\nIn severely obese individuals, inflammatory markers and metabolic factors gain more importance, possibly reflecting the compounding effects of systemic inflammation.\n\n\nCode\n# ---  Generate Obisity Plot -------------------------------\n\n\n# Optional: set custom colors for clarity\ngroup_colors &lt;- c(\"Normal\" = \"tomato\", \"Obese\" = \"forestgreen\", \"Severely Obese\" = \"steelblue\")\n\n# Filter and reorder each group individually\ng1 &lt;- top_obesity %&gt;%\n  filter(Group == \"Normal\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\ng2 &lt;- top_obesity %&gt;%\n  filter(Group == \"Obese\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\ng3 &lt;- top_obesity %&gt;%\n  filter(Group == \"Severely Obese\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\nggplot() +\n  geom_col(data = g1, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  geom_col(data = g2, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  geom_col(data = g3, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  facet_wrap(~ Group, scales = \"free\", nrow = 1) +\n  coord_flip() +\n  scale_fill_manual(values = group_colors) +\n  labs(x = NULL, y = \"Importance\", title = \"Top Predictors by Obesity Class\") +\n  theme_minimal(base_size = 13) +\n  theme(\n    strip.text = element_text(size = 9, face = \"bold\"),\n    axis.text.x = element_text(size = 9, angle = 45, hjust = 1),\n    axis.ticks.x = element_line(),\n    panel.grid.major.x = element_line()\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nFinally, models were trained across age categories: &lt;40, 40–59, and 60+ years. Again, CRP consistently tops the list across all age brackets, but we see shifting roles in variables like Creatinine, Triglycerides, ALT, and Vitamin D.\nKey Insight:\nWhile CRP remains central, aging appears to increase the role of kidney function and lipid metabolism markers in predicting gallstones, especially in the 60+ age group.\n\n\nCode\n# --- 6. Generate Age Plot -------------------------------\n# Optional: set custom colors for clarity\ngroup_colors &lt;- c(\"&lt;40\" = \"tomato\", \"40–59\" = \"forestgreen\", \"60+\" = \"steelblue\")\n\n      # age &lt; 40 ~ \"&lt;40\",\n      # age &gt;= 40 & age &lt; 60 ~ \"40–59\",\n      # age &gt;= 60 ~ \"60+\"\n# Filter and reorder each group individually\ng1 &lt;- top_age %&gt;%\n  filter(Group == \"&lt;40\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\ng2 &lt;- top_age %&gt;%\n  filter(Group == \"40–59\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\ng3 &lt;- top_age %&gt;%\n  filter(Group == \"60+\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\nggplot() +\n  geom_col(data = g1, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  geom_col(data = g2, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  geom_col(data = g3, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  facet_wrap(~ Group, scales = \"free\", nrow = 1) +\n  coord_flip() +\n  scale_fill_manual(values = group_colors) +\n  labs(x = NULL, y = \"Importance\", title = \"Top Predictors by Age Class\") +\n  theme_minimal(base_size = 13) +\n  theme(\n    strip.text = element_text(size = 9, face = \"bold\"),\n    axis.text.x = element_text(size = 9, angle = 45, hjust = 1),\n    axis.ticks.x = element_line(),\n    panel.grid.major.x = element_line()\n  )"
  },
  {
    "objectID": "subgroups.html#subgroup-analysis-overview",
    "href": "subgroups.html#subgroup-analysis-overview",
    "title": "Uncovering Predictors of Gallstone Disease Across Age, Sex, and Obesity Subgroups",
    "section": "",
    "text": "Rather than building a single predictive model, this analysis focuses on subgroup-level exploration to identify how important predictors of gallstone disease may differ based on individual characteristics.\n\n\n\nUnderstand which predictors are most important within each subgroup using Gradient Boosted Machines (GBM).\nAssess whether predictors are positively or negatively associated with gallstone status using logistic regression coefficients.\nVisualize the top 8–15 variables per group to highlight contrasts between groups.\n\n\n\n\nExploring model results by subgroups allows us to: - Identify predictors that may be more relevant in specific populations (e.g., hepatic fat in older adults vs cholesterol in younger women). - Support personalized health recommendations by uncovering distinct risk profiles.\nThis approach aligns with precision medicine, which emphasizes tailoring diagnostics and interventions based on characteristics like age, sex, and body composition.\n\n\n\nTo examine whether predictive factors differ by sex, separate gradient boosting models were trained for males and females. As shown in the visualization below, C-Reactive Protein (CRP) emerged as the top predictor for both sexes, but its relative importance was much higher in females (100%) compared to males (also 100%, but with a smaller drop-off across other variables). Other predictors like Vitamin D, Extracellular Water, and Hemoglobin also showed distinct patterns between groups.\nKey Insight:\nCRP, Vitamin D, and protein-related metrics appear to be more influential in women, suggesting potential physiological or hormonal differences in gallstone susceptibility.\n\n\nCode\nlibrary(caret)\nlibrary(tidyverse)\nlibrary(forcats)\n\n\n# Extract and label variable importance\nmale_imp_df &lt;- varImp(gbm_male)$importance %&gt;%\n  rownames_to_column(\"Variable\") %&gt;%\n  left_join(labels_variables, by = c(\"Variable\" = \"name\")) %&gt;%\n  mutate(\n    Variable = coalesce(label, Variable),\n    Group = \"Male\"\n  ) %&gt;%\n  select(-label) %&gt;%\n  arrange(desc(Overall)) %&gt;%\n  head(8) %&gt;%\n  mutate(\n    Variable = factor(Variable, levels = rev(Variable)),\n    RelativeImportance = 100 * Overall / max(Overall)\n  )\n\nfemale_imp_df &lt;- varImp(gbm_female)$importance %&gt;%\n  rownames_to_column(\"Variable\") %&gt;%\n  left_join(labels_variables, by = c(\"Variable\" = \"name\")) %&gt;%\n  mutate(\n    Variable = coalesce(label, Variable),\n    Group = \"Female\"\n  ) %&gt;%\n  select(-label) %&gt;%\n  arrange(desc(Overall)) %&gt;%\n  head(8) %&gt;%\n  mutate(\n    Variable = factor(Variable, levels = rev(Variable)),\n    RelativeImportance = 100 * Overall / max(Overall)\n  )\n\n# Combine datasets\n# imp_sex_df &lt;- bind_rows(male_imp_df, female_imp_df)\n\n# Plot: Female\nfemale_plot &lt;- ggplot(female_imp_df, aes(x = Variable, y = RelativeImportance)) +\n  geom_col(fill = \"salmon\") +\n  geom_text(aes(label = paste0(round(RelativeImportance, 1), \"%\")),\n            hjust = 1.1, color = \"white\", size = 3) +\n  labs(\n    title = \"Top Predictors of Gallstones by Sex\",\n    subtitle = \"Female\",\n    y = NULL,\n    x = NULL\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(axis.text.y = element_text(size = 10),\n        plot.title.position = \"plot\",           # aligns title relative to plot, not panel\n        plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5) ) + \n  coord_flip()\n\n# Plot: Male\nmale_plot &lt;- ggplot(male_imp_df, aes(x = Variable, y = RelativeImportance)) +\n  geom_col(fill = \"steelblue\") +\n  geom_text(aes(label = paste0(round(RelativeImportance, 1), \"%\")),\n            hjust = 1.1, color = \"white\", size = 3) +\n  labs(\n    title = NULL,\n    subtitle = \"Male\",\n    y = \"Variable Importance (%)\",\n    x = NULL\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(axis.text.y = element_text(size = 10),\n        plot.title.position = \"plot\",           # aligns title relative to plot, not panel\n        plot.subtitle = element_text(hjust = 0.5) ) + \n  coord_flip()\n\n# Combine vertically\nfemale_plot / male_plot\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we stratified the dataset by obesity class—defined using body fat percentage—as Normal, Obese, and Severely Obese. Separate models for each group reveal that CRP remains a consistently strong predictor, but the relative importance of other features such as Triglycerides, ECF/TBW, and Hemoglobin varies across categories.\nKey Insight:\nIn severely obese individuals, inflammatory markers and metabolic factors gain more importance, possibly reflecting the compounding effects of systemic inflammation.\n\n\nCode\n# ---  Generate Obisity Plot -------------------------------\n\n\n# Optional: set custom colors for clarity\ngroup_colors &lt;- c(\"Normal\" = \"tomato\", \"Obese\" = \"forestgreen\", \"Severely Obese\" = \"steelblue\")\n\n# Filter and reorder each group individually\ng1 &lt;- top_obesity %&gt;%\n  filter(Group == \"Normal\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\ng2 &lt;- top_obesity %&gt;%\n  filter(Group == \"Obese\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\ng3 &lt;- top_obesity %&gt;%\n  filter(Group == \"Severely Obese\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\nggplot() +\n  geom_col(data = g1, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  geom_col(data = g2, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  geom_col(data = g3, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  facet_wrap(~ Group, scales = \"free\", nrow = 1) +\n  coord_flip() +\n  scale_fill_manual(values = group_colors) +\n  labs(x = NULL, y = \"Importance\", title = \"Top Predictors by Obesity Class\") +\n  theme_minimal(base_size = 13) +\n  theme(\n    strip.text = element_text(size = 9, face = \"bold\"),\n    axis.text.x = element_text(size = 9, angle = 45, hjust = 1),\n    axis.ticks.x = element_line(),\n    panel.grid.major.x = element_line()\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nFinally, models were trained across age categories: &lt;40, 40–59, and 60+ years. Again, CRP consistently tops the list across all age brackets, but we see shifting roles in variables like Creatinine, Triglycerides, ALT, and Vitamin D.\nKey Insight:\nWhile CRP remains central, aging appears to increase the role of kidney function and lipid metabolism markers in predicting gallstones, especially in the 60+ age group.\n\n\nCode\n# --- 6. Generate Age Plot -------------------------------\n# Optional: set custom colors for clarity\ngroup_colors &lt;- c(\"&lt;40\" = \"tomato\", \"40–59\" = \"forestgreen\", \"60+\" = \"steelblue\")\n\n      # age &lt; 40 ~ \"&lt;40\",\n      # age &gt;= 40 & age &lt; 60 ~ \"40–59\",\n      # age &gt;= 60 ~ \"60+\"\n# Filter and reorder each group individually\ng1 &lt;- top_age %&gt;%\n  filter(Group == \"&lt;40\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\ng2 &lt;- top_age %&gt;%\n  filter(Group == \"40–59\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\ng3 &lt;- top_age %&gt;%\n  filter(Group == \"60+\") %&gt;%\n  arrange(Overall) %&gt;%\n  mutate(Variable = factor(Variable, levels = Variable))\n\nggplot() +\n  geom_col(data = g1, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  geom_col(data = g2, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  geom_col(data = g3, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +\n  facet_wrap(~ Group, scales = \"free\", nrow = 1) +\n  coord_flip() +\n  scale_fill_manual(values = group_colors) +\n  labs(x = NULL, y = \"Importance\", title = \"Top Predictors by Age Class\") +\n  theme_minimal(base_size = 13) +\n  theme(\n    strip.text = element_text(size = 9, face = \"bold\"),\n    axis.text.x = element_text(size = 9, angle = 45, hjust = 1),\n    axis.ticks.x = element_line(),\n    panel.grid.major.x = element_line()\n  )"
  },
  {
    "objectID": "subgroups.html#summary-of-the-dataset-and-original-study",
    "href": "subgroups.html#summary-of-the-dataset-and-original-study",
    "title": "Uncovering Predictors of Gallstone Disease Across Age, Sex, and Obesity Subgroups",
    "section": "Summary of the Dataset and Original Study",
    "text": "Summary of the Dataset and Original Study\nThis analysis is based on data from the UCI Gallbladder Disease Dataset, originally published by Kocaay et al. (2020) in their clinical study on predicting gallstone disease using bioelectrical impedance and clinical markers.\n\nStudy Title: “Can Bioelectrical Impedance Analysis Be a New and Reliable Method for the Diagnosis of Gallstone Disease?”\nAuthors: Kocaay et al., 2020\n\nLink to dataset: https://archive.ics.uci.edu/ml/datasets/Gallbladder+Disease\n\nDOI: 10.14744/tjtes.2019.17317\n\nThe dataset contains information on 540 patients, including: - Demographic features: age, sex\n- Body composition: BMI, visceral fat, hepatic fat, lean mass\n- Biochemical markers: cholesterol, glucose, ALT, AST, etc.\n- Target variable: gallstone status (present vs absent)\nThe goal of the original study was to assess whether body composition metrics could improve the diagnosis of gallstone disease."
  },
  {
    "objectID": "replication.html",
    "href": "replication.html",
    "title": "Replication of Gallstone Prediction Study (Esen et al., 2024)",
    "section": "",
    "text": "Code\n# Load your cleaned dataset\nraw_data &lt;- read_xlsx(\"data/dataset-uci.xlsx\")  # update path\n\n# Convert target to factor with valid R variable names\nraw_data &lt;- raw_data %&gt;%\n  clean_names() %&gt;%\n  mutate(gallstone_status = factor(gallstone_status, levels = c(0, 1), labels = c(\"no\", \"yes\")))\n\n# Confirm class balance\ntable(raw_data$gallstone_status)\n\n\n\n no yes \n161 158"
  },
  {
    "objectID": "replication.html#load-and-prepare-data",
    "href": "replication.html#load-and-prepare-data",
    "title": "Replication of Gallstone Prediction Study (Esen et al., 2024)",
    "section": "",
    "text": "Code\n# Load your cleaned dataset\nraw_data &lt;- read_xlsx(\"data/dataset-uci.xlsx\")  # update path\n\n# Convert target to factor with valid R variable names\nraw_data &lt;- raw_data %&gt;%\n  clean_names() %&gt;%\n  mutate(gallstone_status = factor(gallstone_status, levels = c(0, 1), labels = c(\"no\", \"yes\")))\n\n# Confirm class balance\ntable(raw_data$gallstone_status)\n\n\n\n no yes \n161 158"
  },
  {
    "objectID": "replication.html#split-data-train-test-70-30",
    "href": "replication.html#split-data-train-test-70-30",
    "title": "Replication of Gallstone Prediction Study (Esen et al., 2024)",
    "section": "2. Split Data: Train-Test (70-30)",
    "text": "2. Split Data: Train-Test (70-30)\n\n\nCode\nset.seed(123)\ntrain_index &lt;- createDataPartition(raw_data$gallstone_status, p = 0.7, list = FALSE)\ntrain_data &lt;- raw_data[train_index, ]\ntest_data &lt;- raw_data[-train_index, ]"
  },
  {
    "objectID": "replication.html#train-multiple-models",
    "href": "replication.html#train-multiple-models",
    "title": "Replication of Gallstone Prediction Study (Esen et al., 2024)",
    "section": "3. Train Multiple Models",
    "text": "3. Train Multiple Models\n\nHelper: Performance Metrics\n\n\nCode\nget_metrics &lt;- function(pred, prob, actual) {\n  conf &lt;- confusionMatrix(pred, actual)\n  \n  # Ensure AUC is stored as a plain numeric scalar\n  auc_value &lt;- tryCatch({\n    as.numeric(pROC::auc(pROC::roc(as.numeric(actual), as.numeric(prob))))\n  }, error = function(e) NA)\n  \n  data.frame(\n    Accuracy = conf$overall[\"Accuracy\"],\n    Precision = conf$byClass[\"Precision\"],\n    Recall = conf$byClass[\"Recall\"],\n    F1 = conf$byClass[\"F1\"],\n    AUC = auc_value\n  )\n}\n\n\n\n\nLogistic Regression with glmnet (Ridge)\n\n\nCode\nx_train &lt;- model.matrix(gallstone_status ~ ., train_data)[,-1]\ny_train &lt;- train_data$gallstone_status\nx_test &lt;- model.matrix(gallstone_status ~ ., test_data)[,-1]\ny_test &lt;- test_data$gallstone_status\n\ncv_fit &lt;- cv.glmnet(x_train, y_train, alpha = 0, family = \"binomial\")\nlr_prob &lt;- predict(cv_fit, newx = x_test, s = \"lambda.min\", type = \"response\")\nlr_pred &lt;- factor(ifelse(lr_prob &gt; 0.5, \"yes\", \"no\"), levels = levels(y_test))\nlr_glmnet_metrics &lt;- get_metrics(lr_pred, lr_prob, y_test)\n\n\n\n\nRandom Forest\n\n\nCode\nrf_model &lt;- train(gallstone_status ~ ., data = train_data, method = \"rf\")\nrf_metrics &lt;- get_metrics(predict(rf_model, test_data), predict(rf_model, test_data, type = \"prob\")[, \"yes\"], y_test)\n\n\n\n\nGradient Boosting (GBM)\n\n\nCode\ngbm_model &lt;- train(gallstone_status ~ ., data = train_data, method = \"gbm\", verbose = FALSE)\ngbm_metrics &lt;- get_metrics(predict(gbm_model, test_data), predict(gbm_model, test_data, type = \"prob\")[, \"yes\"], y_test)\n\n\n\n\nNaive Bayes\n\n\nCode\nnb_model &lt;- train(gallstone_status ~ ., data = train_data, method = \"naive_bayes\")\nnb_metrics &lt;- get_metrics(predict(nb_model, test_data), predict(nb_model, test_data, type = \"prob\")[, \"yes\"], y_test)\n\n\n\n\nSupport Vector Machine (RBF Kernel) with probabilities\n\n\nCode\nsvm_model &lt;- train(\n  gallstone_status ~ ., data = train_data,\n  method = \"svmRadial\",\n  trControl = trainControl(method = \"cv\", number = 5, classProbs = TRUE, savePredictions = \"final\"),\n  preProcess = c(\"center\", \"scale\"),\n  tuneLength = 5\n)\n\nsvm_pred &lt;- predict(svm_model, test_data)\nsvm_prob &lt;- predict(svm_model, test_data, type = \"prob\")[, \"yes\"]\nsvm_metrics &lt;- get_metrics(svm_pred, svm_prob, y_test)\n\n\n\n\nLogistic Regression\n\n\nCode\n# Classic Logistic Regression\nclassic_lr_model &lt;- glm(gallstone_status ~ ., data = train_data, family = binomial)\nclassic_lr_prob &lt;- predict(classic_lr_model, newdata = test_data, type = \"response\")\nclassic_lr_pred &lt;- factor(ifelse(classic_lr_prob &gt; 0.5, \"yes\", \"no\"), levels = levels(test_data$gallstone_status))\nclassic_lr_metrics &lt;- get_metrics(classic_lr_pred, classic_lr_prob, test_data$gallstone_status)"
  },
  {
    "objectID": "replication.html#compare-model-performance",
    "href": "replication.html#compare-model-performance",
    "title": "Replication of Gallstone Prediction Study (Esen et al., 2024)",
    "section": "4. Compare Model Performance",
    "text": "4. Compare Model Performance\n\n\nCode\n# Combine both logistic models and others\nmodel_results &lt;- list(\n  LR_Classic = classic_lr_metrics,\n  LR_GLMNET = lr_glmnet_metrics,\n  RF = rf_metrics,\n  GBM = gbm_metrics,\n  NB = nb_metrics,\n  SVM = svm_metrics\n)\n\n# Convert to data frame\nresults_df &lt;- bind_rows(lapply(model_results, function(df) {\n  df[] &lt;- lapply(df, as.numeric)\n  df\n}), .id = \"Model\")\n\ncolnames(results_df)[1] &lt;- \"Model\"\n\n# Display sorted by AUC\nresults_df %&gt;%\n  arrange(desc(AUC))\n\n\n                  Model  Accuracy Precision    Recall        F1       AUC\nAccuracy...1  LR_GLMNET 0.8315789 0.7666667 0.9583333 0.8518519 0.8785461\nAccuracy...2        SVM 0.7789474 0.7454545 0.8541667 0.7961165 0.8577128\nAccuracy...3         RF 0.7263158 0.6833333 0.8541667 0.7592593 0.8375443\nAccuracy...4 LR_Classic 0.8000000 0.7377049 0.9375000 0.8256881 0.8280142\nAccuracy...5         NB 0.7052632 0.7500000 0.6250000 0.6818182 0.7814716\nAccuracy...6        GBM 0.7263158 0.6833333 0.8541667 0.7592593 0.7562057\n\n\n\n\nCode\n# Create the published study results data frame\npublished_results &lt;- tibble::tibble(\n  Model = c(\"LR\", \"RF\", \"GB\", \"NB\", \"SVM\", \"AdaBoost\", \"XGBoost\", \"MLP\", \"DT\", \"KNN\"),\n  Accuracy = c(0.8333, 0.8542, 0.8542, 0.6250, 0.4688, 0.8229, 0.8333, 0.6667, 0.6979, 0.4896),\n  Precision = c(0.86, 0.91, 0.91, 0.61, 0.52, 0.86, 0.93, 0.76, 0.78, 0.53),\n  Recall = c(0.83, 0.81, 0.81, 0.87, 0.29, 0.81, 0.75, 0.56, 0.62, 0.44),\n  F1 = c(0.84, 0.86, 0.86, 0.71, 0.37, 0.83, 0.83, 0.64, 0.69, 0.48),\n  AUC = c(0.83, 0.85, 0.85, 0.60, 0.48, 0.82, 0.84, 0.67, 0.70, 0.49)\n)\n\n\n# Render styled HTML table\npublished_results %&gt;%\n  kable(format = \"html\", digits = 2, caption = \"Published Model Performance (Esen et al., 2024)\") %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), full_width = FALSE)\n\n\n\n\nPublished Model Performance (Esen et al., 2024)\n\n\nModel\nAccuracy\nPrecision\nRecall\nF1\nAUC\n\n\n\n\nLR\n0.83\n0.86\n0.83\n0.84\n0.83\n\n\nRF\n0.85\n0.91\n0.81\n0.86\n0.85\n\n\nGB\n0.85\n0.91\n0.81\n0.86\n0.85\n\n\nNB\n0.62\n0.61\n0.87\n0.71\n0.60\n\n\nSVM\n0.47\n0.52\n0.29\n0.37\n0.48\n\n\nAdaBoost\n0.82\n0.86\n0.81\n0.83\n0.82\n\n\nXGBoost\n0.83\n0.93\n0.75\n0.83\n0.84\n\n\nMLP\n0.67\n0.76\n0.56\n0.64\n0.67\n\n\nDT\n0.70\n0.78\n0.62\n0.69\n0.70\n\n\nKNN\n0.49\n0.53\n0.44\n0.48\n0.49\n\n\n\n\n\n\n\n\n\n\nCode\n# Load required package\n\n\n# Create the table\npublished_results &lt;- tibble::tibble(\n  Model = c(\"LR\", \"RF\", \"GB\", \"NB\", \"SVM\"),\n  Accuracy = c(0.83, 0.85, 0.85, 0.63, 0.47),\n  Precision = c(0.86, 0.91, 0.91, 0.61, 0.52),\n  Recall = c(0.83, 0.81, 0.81, 0.87, 0.29),\n  `F1 Score` = c(0.84, 0.86, 0.86, 0.71, 0.37),\n  AUC = c(0.83, 0.85, 0.85, 0.60, 0.48)\n)\n\n# Display a nicely formatted HTML table\npublished_results %&gt;%\n  arrange(desc(AUC)) %&gt;% \n  kable(format = \"html\", digits = 2, caption = \"Published Model Performance (Esen et al., 2024)\") %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), full_width = FALSE)\n\n\n\n\nPublished Model Performance (Esen et al., 2024)\n\n\nModel\nAccuracy\nPrecision\nRecall\nF1 Score\nAUC\n\n\n\n\nRF\n0.85\n0.91\n0.81\n0.86\n0.85\n\n\nGB\n0.85\n0.91\n0.81\n0.86\n0.85\n\n\nLR\n0.83\n0.86\n0.83\n0.84\n0.83\n\n\nNB\n0.63\n0.61\n0.87\n0.71\n0.60\n\n\nSVM\n0.47\n0.52\n0.29\n0.37\n0.48\n\n\n\n\n\n\n\n\nCode\n# Display a styled HTML table of your replication results\nrownames(results_df) &lt;- NULL\nresults_df %&gt;%\n  arrange(desc(AUC)) %&gt;% \n  kable(format = \"html\", digits = 2, caption = \"Replicated Model Performance\") %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), full_width = FALSE)\n\n\n\n\nReplicated Model Performance\n\n\nModel\nAccuracy\nPrecision\nRecall\nF1\nAUC\n\n\n\n\nLR_GLMNET\n0.83\n0.77\n0.96\n0.85\n0.88\n\n\nSVM\n0.78\n0.75\n0.85\n0.80\n0.86\n\n\nRF\n0.73\n0.68\n0.85\n0.76\n0.84\n\n\nLR_Classic\n0.80\n0.74\n0.94\n0.83\n0.83\n\n\nNB\n0.71\n0.75\n0.62\n0.68\n0.78\n\n\nGBM\n0.73\n0.68\n0.85\n0.76\n0.76"
  },
  {
    "objectID": "replication.html#feature-importance-from-gbm",
    "href": "replication.html#feature-importance-from-gbm",
    "title": "Replication of Gallstone Prediction Study (Esen et al., 2024)",
    "section": "5. Feature Importance from GBM",
    "text": "5. Feature Importance from GBM\n\n\nCode\n# Get variable importance\ngbm_varimp &lt;- varImp(gbm_model)\n\n# Update rownames with descriptive labels (if found)\nrownames(gbm_varimp$importance) &lt;- variable_labels[rownames(gbm_varimp$importance)]\n\nplot(gbm_varimp, top = 15, main = \"Top Features - Gradient Boosting\")"
  },
  {
    "objectID": "replication.html#conclusion",
    "href": "replication.html#conclusion",
    "title": "Replication of Gallstone Prediction Study (Esen et al., 2024)",
    "section": "✅ Conclusion",
    "text": "✅ Conclusion\n\nFactor levels are now recoded to valid names (no, yes) to enable class probability predictions.\nSVM and all other models now support AUC and probability-based evaluation.\nGradient Boosting and Random Forest remain strong performers for gallstone prediction."
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "Exploring",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(skimr)\nlibrary(corrplot)\n\ncorrplot 0.95 loaded\n\nlibrary(GGally)\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\n\nraw_data &lt;- read_xlsx(\"data/dataset-uci.xlsx\") %&gt;% \n  clean_names() %&gt;% \n  mutate(gallstone_status = factor(gallstone_status))\n\n# 1. Quick structure and summary\nsummary(raw_data)\n\n gallstone_status      age            gender        comorbidity    \n 0:161            Min.   :20.00   Min.   :0.0000   Min.   :0.0000  \n 1:158            1st Qu.:38.50   1st Qu.:0.0000   1st Qu.:0.0000  \n                  Median :49.00   Median :0.0000   Median :0.0000  \n                  Mean   :48.07   Mean   :0.4922   Mean   :0.3354  \n                  3rd Qu.:56.00   3rd Qu.:1.0000   3rd Qu.:1.0000  \n                  Max.   :96.00   Max.   :1.0000   Max.   :3.0000  \n coronary_artery_disease_cad hypothyroidism    hyperlipidemia   \n Min.   :0.00000             Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.00000             1st Qu.:0.00000   1st Qu.:0.00000  \n Median :0.00000             Median :0.00000   Median :0.00000  \n Mean   :0.03762             Mean   :0.02821   Mean   :0.02508  \n 3rd Qu.:0.00000             3rd Qu.:0.00000   3rd Qu.:0.00000  \n Max.   :1.00000             Max.   :1.00000   Max.   :1.00000  \n diabetes_mellitus_dm     height          weight       body_mass_index_bmi\n Min.   :0.0000       Min.   :145.0   Min.   : 42.90   Min.   :17.40      \n 1st Qu.:0.0000       1st Qu.:159.5   1st Qu.: 69.60   1st Qu.:25.25      \n Median :0.0000       Median :168.0   Median : 78.80   Median :28.30      \n Mean   :0.1348       Mean   :167.2   Mean   : 80.56   Mean   :28.88      \n 3rd Qu.:0.0000       3rd Qu.:175.0   3rd Qu.: 91.25   3rd Qu.:31.85      \n Max.   :1.0000       Max.   :191.0   Max.   :143.50   Max.   :49.70      \n total_body_water_tbw extracellular_water_ecw intracellular_water_icw\n Min.   :13.00        Min.   : 9.00           Min.   :13.80          \n 1st Qu.:34.20        1st Qu.:14.80           1st Qu.:19.30          \n Median :39.80        Median :17.10           Median :23.00          \n Mean   :40.59        Mean   :17.07           Mean   :23.63          \n 3rd Qu.:47.00        3rd Qu.:19.40           3rd Qu.:27.55          \n Max.   :66.20        Max.   :27.80           Max.   :57.10          \n extracellular_fluid_total_body_water_ecf_tbw total_body_fat_ratio_tbfr_percent\n Min.   :29.23                                Min.   : 6.30                    \n 1st Qu.:40.08                                1st Qu.:22.02                    \n Median :42.00                                Median :27.82                    \n Mean   :42.21                                Mean   :28.27                    \n 3rd Qu.:44.00                                3rd Qu.:34.81                    \n Max.   :52.00                                Max.   :50.92                    \n lean_mass_lm_percent body_protein_content_protein_percent\n Min.   :48.99        Min.   : 5.56                       \n 1st Qu.:65.17        1st Qu.:14.46                       \n Median :72.11        Median :15.87                       \n Mean   :71.64        Mean   :15.94                       \n 3rd Qu.:77.85        3rd Qu.:17.43                       \n Max.   :93.67        Max.   :24.81                       \n visceral_fat_rating_vfr  bone_mass_bm   muscle_mass_mm  obesity_percent  \n Min.   : 1.000          Min.   :1.400   Min.   : 4.70   Min.   :   0.40  \n 1st Qu.: 6.000          1st Qu.:2.400   1st Qu.:45.80   1st Qu.:  13.90  \n Median : 9.000          Median :2.800   Median :53.90   Median :  25.60  \n Mean   : 9.078          Mean   :2.803   Mean   :54.27   Mean   :  35.85  \n 3rd Qu.:12.000          3rd Qu.:3.200   3rd Qu.:62.60   3rd Qu.:  41.75  \n Max.   :31.000          Max.   :4.000   Max.   :78.80   Max.   :1954.00  \n total_fat_content_tfc visceral_fat_area_vfa visceral_muscle_area_vma_kg\n Min.   : 3.10         Min.   : 0.90         Min.   :18.90              \n 1st Qu.:17.00         1st Qu.: 8.57         1st Qu.:27.25              \n Median :22.60         Median :11.59         Median :30.41              \n Mean   :23.49         Mean   :12.17         Mean   :30.40              \n 3rd Qu.:28.55         3rd Qu.:15.10         3rd Qu.:33.80              \n Max.   :62.50         Max.   :41.00         Max.   :41.10              \n hepatic_fat_accumulation_hfa    glucose      total_cholesterol_tc\n Min.   :0.00                 Min.   : 69.0   Min.   : 60.0       \n 1st Qu.:0.00                 1st Qu.: 92.0   1st Qu.:172.0       \n Median :1.00                 Median : 98.0   Median :198.0       \n Mean   :1.15                 Mean   :108.7   Mean   :203.5       \n 3rd Qu.:2.00                 3rd Qu.:109.0   3rd Qu.:233.0       \n Max.   :4.00                 Max.   :575.0   Max.   :360.0       \n low_density_lipoprotein_ldl high_density_lipoprotein_hdl  triglyceride   \n Min.   : 11.0               Min.   : 25.00               Min.   :  1.39  \n 1st Qu.:100.5               1st Qu.: 40.00               1st Qu.: 83.00  \n Median :122.0               Median : 46.50               Median :119.00  \n Mean   :126.7               Mean   : 49.48               Mean   :144.50  \n 3rd Qu.:151.0               3rd Qu.: 56.00               3rd Qu.:172.00  \n Max.   :293.0               Max.   :273.00               Max.   :838.00  \n aspartat_aminotransferaz_ast alanin_aminotransferaz_alt\n Min.   :  8.00               Min.   :  3.00            \n 1st Qu.: 15.00               1st Qu.: 14.25            \n Median : 18.00               Median : 19.00            \n Mean   : 21.68               Mean   : 26.86            \n 3rd Qu.: 23.00               3rd Qu.: 30.00            \n Max.   :195.00               Max.   :372.00            \n alkaline_phosphatase_alp   creatinine     glomerular_filtration_rate_gfr\n Min.   :  7.00           Min.   :0.4600   Min.   : 10.60                \n 1st Qu.: 58.00           1st Qu.:0.6500   1st Qu.: 94.17                \n Median : 71.00           Median :0.7900   Median :104.00                \n Mean   : 73.11           Mean   :0.8006   Mean   :100.82                \n 3rd Qu.: 86.00           3rd Qu.:0.9200   3rd Qu.:110.75                \n Max.   :197.00           Max.   :1.4600   Max.   :132.00                \n c_reactive_protein_crp hemoglobin_hgb    vitamin_d    \n Min.   : 0.000         Min.   : 8.50   Min.   : 3.50  \n 1st Qu.: 0.000         1st Qu.:13.30   1st Qu.:13.25  \n Median : 0.215         Median :14.40   Median :22.00  \n Mean   : 1.854         Mean   :14.42   Mean   :21.40  \n 3rd Qu.: 1.615         3rd Qu.:15.70   3rd Qu.:28.06  \n Max.   :43.400         Max.   :18.80   Max.   :53.10  \n\nskim(raw_data)\n\n\nData summary\n\n\nName\nraw_data\n\n\nNumber of rows\n319\n\n\nNumber of columns\n39\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n38\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ngallstone_status\n0\n1\nFALSE\n2\n0: 161, 1: 158\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nage\n0\n1\n48.07\n12.11\n20.00\n38.50\n49.00\n56.00\n96.00\n▃▇▇▁▁\n\n\ngender\n0\n1\n0.49\n0.50\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▇\n\n\ncomorbidity\n0\n1\n0.34\n0.52\n0.00\n0.00\n0.00\n1.00\n3.00\n▇▃▁▁▁\n\n\ncoronary_artery_disease_cad\n0\n1\n0.04\n0.19\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nhypothyroidism\n0\n1\n0.03\n0.17\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nhyperlipidemia\n0\n1\n0.03\n0.16\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\ndiabetes_mellitus_dm\n0\n1\n0.13\n0.34\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nheight\n0\n1\n167.16\n10.05\n145.00\n159.50\n168.00\n175.00\n191.00\n▃▇▇▇▂\n\n\nweight\n0\n1\n80.56\n15.71\n42.90\n69.60\n78.80\n91.25\n143.50\n▂▇▅▁▁\n\n\nbody_mass_index_bmi\n0\n1\n28.88\n5.31\n17.40\n25.25\n28.30\n31.85\n49.70\n▂▇▅▁▁\n\n\ntotal_body_water_tbw\n0\n1\n40.59\n7.93\n13.00\n34.20\n39.80\n47.00\n66.20\n▁▅▇▆▁\n\n\nextracellular_water_ecw\n0\n1\n17.07\n3.16\n9.00\n14.80\n17.10\n19.40\n27.80\n▂▆▇▃▁\n\n\nintracellular_water_icw\n0\n1\n23.63\n5.35\n13.80\n19.30\n23.00\n27.55\n57.10\n▇▇▁▁▁\n\n\nextracellular_fluid_total_body_water_ecf_tbw\n0\n1\n42.21\n3.24\n29.23\n40.08\n42.00\n44.00\n52.00\n▁▁▇▇▁\n\n\ntotal_body_fat_ratio_tbfr_percent\n0\n1\n28.27\n8.44\n6.30\n22.02\n27.82\n34.81\n50.92\n▁▇▇▆▂\n\n\nlean_mass_lm_percent\n0\n1\n71.64\n8.44\n48.99\n65.17\n72.11\n77.85\n93.67\n▂▆▇▇▁\n\n\nbody_protein_content_protein_percent\n0\n1\n15.94\n2.33\n5.56\n14.46\n15.87\n17.43\n24.81\n▁▁▇▃▁\n\n\nvisceral_fat_rating_vfr\n0\n1\n9.08\n4.33\n1.00\n6.00\n9.00\n12.00\n31.00\n▆▇▂▁▁\n\n\nbone_mass_bm\n0\n1\n2.80\n0.51\n1.40\n2.40\n2.80\n3.20\n4.00\n▁▇▇▇▃\n\n\nmuscle_mass_mm\n0\n1\n54.27\n10.60\n4.70\n45.80\n53.90\n62.60\n78.80\n▁▁▆▇▃\n\n\nobesity_percent\n0\n1\n35.85\n109.80\n0.40\n13.90\n25.60\n41.75\n1954.00\n▇▁▁▁▁\n\n\ntotal_fat_content_tfc\n0\n1\n23.49\n9.61\n3.10\n17.00\n22.60\n28.55\n62.50\n▃▇▅▁▁\n\n\nvisceral_fat_area_vfa\n0\n1\n12.17\n5.26\n0.90\n8.57\n11.59\n15.10\n41.00\n▃▇▂▁▁\n\n\nvisceral_muscle_area_vma_kg\n0\n1\n30.40\n4.46\n18.90\n27.25\n30.41\n33.80\n41.10\n▁▅▇▆▂\n\n\nhepatic_fat_accumulation_hfa\n0\n1\n1.15\n1.06\n0.00\n0.00\n1.00\n2.00\n4.00\n▇▂▇▂▁\n\n\nglucose\n0\n1\n108.69\n44.85\n69.00\n92.00\n98.00\n109.00\n575.00\n▇▁▁▁▁\n\n\ntotal_cholesterol_tc\n0\n1\n203.50\n45.76\n60.00\n172.00\n198.00\n233.00\n360.00\n▁▅▇▃▁\n\n\nlow_density_lipoprotein_ldl\n0\n1\n126.65\n38.54\n11.00\n100.50\n122.00\n151.00\n293.00\n▁▇▇▂▁\n\n\nhigh_density_lipoprotein_hdl\n0\n1\n49.48\n17.72\n25.00\n40.00\n46.50\n56.00\n273.00\n▇▁▁▁▁\n\n\ntriglyceride\n0\n1\n144.50\n97.90\n1.39\n83.00\n119.00\n172.00\n838.00\n▇▂▁▁▁\n\n\naspartat_aminotransferaz_ast\n0\n1\n21.68\n16.70\n8.00\n15.00\n18.00\n23.00\n195.00\n▇▁▁▁▁\n\n\nalanin_aminotransferaz_alt\n0\n1\n26.86\n27.88\n3.00\n14.25\n19.00\n30.00\n372.00\n▇▁▁▁▁\n\n\nalkaline_phosphatase_alp\n0\n1\n73.11\n24.18\n7.00\n58.00\n71.00\n86.00\n197.00\n▁▇▃▁▁\n\n\ncreatinine\n0\n1\n0.80\n0.18\n0.46\n0.65\n0.79\n0.92\n1.46\n▆▇▆▁▁\n\n\nglomerular_filtration_rate_gfr\n0\n1\n100.82\n16.97\n10.60\n94.17\n104.00\n110.75\n132.00\n▁▁▂▇▅\n\n\nc_reactive_protein_crp\n0\n1\n1.85\n4.99\n0.00\n0.00\n0.22\n1.61\n43.40\n▇▁▁▁▁\n\n\nhemoglobin_hgb\n0\n1\n14.42\n1.78\n8.50\n13.30\n14.40\n15.70\n18.80\n▁▃▇▇▂\n\n\nvitamin_d\n0\n1\n21.40\n9.98\n3.50\n13.25\n22.00\n28.06\n53.10\n▆▇▇▂▁\n\n\n\n\nglimpse(raw_data)\n\nRows: 319\nColumns: 39\n$ gallstone_status                             &lt;fct&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ age                                          &lt;dbl&gt; 50, 47, 61, 41, 42, 96, 3…\n$ gender                                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ comorbidity                                  &lt;dbl&gt; 0, 1, 0, 0, 0, 0, 0, 0, 0…\n$ coronary_artery_disease_cad                  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ hypothyroidism                               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ hyperlipidemia                               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ diabetes_mellitus_dm                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ height                                       &lt;dbl&gt; 185, 176, 171, 168, 178, …\n$ weight                                       &lt;dbl&gt; 92.8, 94.5, 91.1, 67.7, 8…\n$ body_mass_index_bmi                          &lt;dbl&gt; 27.1, 30.5, 31.2, 24.0, 2…\n$ total_body_water_tbw                         &lt;dbl&gt; 52.9, 43.1, 47.2, 41.4, 5…\n$ extracellular_water_ecw                      &lt;dbl&gt; 21.2, 19.5, 20.1, 17.0, 2…\n$ intracellular_water_icw                      &lt;dbl&gt; 31.7, 23.6, 27.1, 24.4, 3…\n$ extracellular_fluid_total_body_water_ecf_tbw &lt;dbl&gt; 40, 45, 43, 41, 39, 46, 4…\n$ total_body_fat_ratio_tbfr_percent            &lt;dbl&gt; 19.2, 32.8, 27.3, 15.8, 2…\n$ lean_mass_lm_percent                         &lt;dbl&gt; 80.84, 67.20, 72.67, 84.1…\n$ body_protein_content_protein_percent         &lt;dbl&gt; 18.88, 16.68, 16.35, 16.9…\n$ visceral_fat_rating_vfr                      &lt;dbl&gt; 9, 15, 15, 6, 8, 12, 3, 1…\n$ bone_mass_bm                                 &lt;dbl&gt; 3.7, 3.2, 3.3, 2.9, 3.5, …\n$ muscle_mass_mm                               &lt;dbl&gt; 71.4, 60.3, 62.9, 54.1, 6…\n$ obesity_percent                              &lt;dbl&gt; 23.4, 38.8, 41.7, 9.0, 28…\n$ total_fat_content_tfc                        &lt;dbl&gt; 17.8, 31.0, 24.9, 10.7, 1…\n$ visceral_fat_area_vfa                        &lt;dbl&gt; 10.6, 18.4, 16.2, 6.5, 10…\n$ visceral_muscle_area_vma_kg                  &lt;dbl&gt; 39.7, 32.7, 34.0, 29.2, 3…\n$ hepatic_fat_accumulation_hfa                 &lt;dbl&gt; 0, 0, 0, 1, 2, 0, 0, 3, 2…\n$ glucose                                      &lt;dbl&gt; 102, 94, 103, 69, 109, 74…\n$ total_cholesterol_tc                         &lt;dbl&gt; 250, 172, 179, 173, 205, …\n$ low_density_lipoprotein_ldl                  &lt;dbl&gt; 175.0, 108.0, 124.0, 73.0…\n$ high_density_lipoprotein_hdl                 &lt;dbl&gt; 40, 43, 43, 59, 30, 30, 4…\n$ triglyceride                                 &lt;dbl&gt; 134, 103, 69, 53, 326, 65…\n$ aspartat_aminotransferaz_ast                 &lt;dbl&gt; 20, 14, 18, 20, 27, 13, 1…\n$ alanin_aminotransferaz_alt                   &lt;dbl&gt; 22, 13, 14, 12, 54, 13, 1…\n$ alkaline_phosphatase_alp                     &lt;dbl&gt; 87, 46, 66, 34, 71, 60, 7…\n$ creatinine                                   &lt;dbl&gt; 0.82, 0.87, 1.25, 1.02, 0…\n$ glomerular_filtration_rate_gfr               &lt;dbl&gt; 112.47, 107.10, 65.51, 94…\n$ c_reactive_protein_crp                       &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0…\n$ hemoglobin_hgb                               &lt;dbl&gt; 16.0, 14.4, 16.2, 15.4, 1…\n$ vitamin_d                                    &lt;dbl&gt; 33.00000, 25.00000, 30.20…\n\n\n\n# Convert target to factor\nraw_data &lt;- raw_data %&gt;%\n  clean_names() %&gt;%\n  mutate(gallstone_status = factor(gallstone_status))\n\n# Confirm class balance\ntable(raw_data$gallstone_status)\n\n\n  0   1 \n161 158 \n\n\nWhat the EDA Suggests 🟢 1. Class Balance Very balanced dataset:\nGallstone = 1: 49.5% Gallstone = 0: 50.5%\n✅ Great for training classification models — no resampling needed.\n🟢 2. Boxplots and Correlations Your boxplots and pairwise correlations indicate some meaningful differences between gallstone vs. non-gallstone groups:\nBMI, Total Body Fat Ratio, and Visceral Fat Area:\nSlightly higher in the gallstone group.\nConsistent with known risk factors (metabolic syndrome, obesity).\nGlucose:\nAppears right-skewed with some extreme outliers.\nHigher glucose in gallstone group aligns with known diabetes/gallstone links.\nHDL (Good cholesterol):\nPositive correlation with gallstone presence is interesting — may warrant further stratification (e.g., by gender or BMI).\n🔵 3. Correlation Matrix Strong internal correlations among body composition variables (e.g., TBFR, VFA, BMI).\nCholesterol and liver enzymes show lower correlations with gallstone status directly, but could still contribute in multivariate models.\n\n# 2. Missing values\ncolSums(is.na(raw_data))\n\n                            gallstone_status \n                                           0 \n                                         age \n                                           0 \n                                      gender \n                                           0 \n                                 comorbidity \n                                           0 \n                 coronary_artery_disease_cad \n                                           0 \n                              hypothyroidism \n                                           0 \n                              hyperlipidemia \n                                           0 \n                        diabetes_mellitus_dm \n                                           0 \n                                      height \n                                           0 \n                                      weight \n                                           0 \n                         body_mass_index_bmi \n                                           0 \n                        total_body_water_tbw \n                                           0 \n                     extracellular_water_ecw \n                                           0 \n                     intracellular_water_icw \n                                           0 \nextracellular_fluid_total_body_water_ecf_tbw \n                                           0 \n           total_body_fat_ratio_tbfr_percent \n                                           0 \n                        lean_mass_lm_percent \n                                           0 \n        body_protein_content_protein_percent \n                                           0 \n                     visceral_fat_rating_vfr \n                                           0 \n                                bone_mass_bm \n                                           0 \n                              muscle_mass_mm \n                                           0 \n                             obesity_percent \n                                           0 \n                       total_fat_content_tfc \n                                           0 \n                       visceral_fat_area_vfa \n                                           0 \n                 visceral_muscle_area_vma_kg \n                                           0 \n                hepatic_fat_accumulation_hfa \n                                           0 \n                                     glucose \n                                           0 \n                        total_cholesterol_tc \n                                           0 \n                 low_density_lipoprotein_ldl \n                                           0 \n                high_density_lipoprotein_hdl \n                                           0 \n                                triglyceride \n                                           0 \n                aspartat_aminotransferaz_ast \n                                           0 \n                  alanin_aminotransferaz_alt \n                                           0 \n                    alkaline_phosphatase_alp \n                                           0 \n                                  creatinine \n                                           0 \n              glomerular_filtration_rate_gfr \n                                           0 \n                      c_reactive_protein_crp \n                                           0 \n                              hemoglobin_hgb \n                                           0 \n                                   vitamin_d \n                                           0 \n\n# 3. Gallstone status distribution\nraw_data %&gt;%\n  count(gallstone_status) %&gt;%\n  mutate(percent = round(n / sum(n) * 100, 1))\n\n# A tibble: 2 × 3\n  gallstone_status     n percent\n  &lt;fct&gt;            &lt;int&gt;   &lt;dbl&gt;\n1 0                  161    50.5\n2 1                  158    49.5\n\n# 4. Histograms for all numeric variables\nraw_data %&gt;%\n  select(where(is.numeric)) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"variable\", values_to = \"value\") %&gt;%\n  ggplot(aes(x = value)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\") +\n  facet_wrap(~variable, scales = \"free\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 5. Correlation matrix\ncor_data &lt;- raw_data %&gt;%\n  select(where(is.numeric)) %&gt;%\n  cor(use = \"complete.obs\")\n\ncorrplot(cor_data, method = \"color\", tl.cex = 0.6, number.cex = 0.5)\n\n\n\n\n\n\n\n# 6. Boxplots of selected variables by gallstone status\nselected_vars &lt;- c(\"age\", \"body_mass_index_bmi\", \"glucose\",\n                   \"visceral_fat_area_vfa\", \"total_body_fat_ratio_tbfr_percent\")\n\nraw_data %&gt;%\n  select(gallstone_status, all_of(selected_vars)) %&gt;%\n  pivot_longer(cols = -gallstone_status, names_to = \"feature\", values_to = \"value\") %&gt;%\n  ggplot(aes(x = factor(gallstone_status), y = value, fill = factor(gallstone_status))) +\n  geom_boxplot() +\n  facet_wrap(~feature, scales = \"free\") +\n  labs(x = \"Gallstone Status\", y = NULL, fill = \"Gallstone\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# 7. Pairwise scatterplots for top variables\nggpairs(\n  raw_data,\n  columns = c(\"age\", \"body_mass_index_bmi\", \"glucose\", \"low_density_lipoprotein_ldl\",\n              \"high_density_lipoprotein_hdl\", \"gallstone_status\"),\n  aes(color = factor(gallstone_status), alpha = 0.6)\n)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n🧠 So What’s Left to Explore? 🟡 1. Model Interpretability & Explainability The paper focused on performance metrics but not explainability.\nYou can use:\nSHAP (Shapley Additive Explanations) to visualize per-patient risk contributions.\nLIME for local interpretability of models like GB or RF.\nThese help bridge ML models and clinical trust.\n🟡 2. Subgroup or Stratified Analysis The paper gave aggregate results. You could explore:\nSex-specific predictors (e.g., does CRP matter more in men vs. women?).\nAge groups or obesity classes as stratifiers.\nInteraction effects: CRP × BMI or TBW × gender.\n🟡 3. Alternative Feature Selection Methods They used ANOVA F-score.\nYou could test:\nRecursive Feature Elimination (RFE)\nBoruta for random forest-based selection.\nLASSO (for sparse logistic regression).\nCompare performance vs. ANOVA features.\n🟡 4. Reproducibility & Transparency Rebuild their best models in R or Python and publish:\nOpen code + documentation (especially useful for clinical researchers).\nCompare performance using different resampling strategies (e.g., repeated k-fold vs. 70/30 split).\n🟡 5. External Validation or Transfer Learning As they mention, results are limited to their population.\nIf you can find an external gallstone dataset (e.g., from NHANES or another hospital):\nApply or fine-tune their models (domain adaptation).\nCheck generalizability.\n🟡 6. Clinical Tool or Dashboard Package their best-performing model into an app or web tool.\nTake patient inputs (CRP, vitamin D, TBW, etc.) and give risk prediction.\nYou can build a shiny dashboard (R) or Flask app (Python).\n✨ Original Ideas You Could Publish or Share Topic Idea Model Explainability SHAP summary & force plots for key features Clinical Insight Subgroup analysis: CRP and TBW by gender or obesity level Reproducibility Open-source pipeline (data cleaning, modeling, evaluation) Feature Selection Comparison of ANOVA vs. Boruta vs. LASSO Visualization Interactive feature dashboard or model comparison tool Application Convert gradient boosting model into a clinical web tool\nLet me know if you’d like to:\nRebuild one of their top models in R (e.g., xgboost with caret/tidymodels)?\nApply SHAP or LIME for interpretability?\nBuild a dashboard or app?\nRun subgroup analysis?"
  }
]