"0","#| include: false"
"0","# Load packages"
"0","library(caret)"
"0","library(dplyr)"
"0","library(ggplot2)"
"0","library(forcats)"
"0","library(patchwork)"
"0","library(purrr)"
"0",""
"0","# --- 1. Create Age & Obesity Groups --------------------------------------"
"0",""
"0","raw_data <- raw_data %>%"
"0","  mutate("
"0","    age_group = case_when("
"0","      age < 40 ~ ""<40"","
"0","      age >= 40 & age < 60 ~ ""40â€“59"","
"0","      age >= 60 ~ ""60+"""
"0","    ),"
"0","    obesity_class = case_when("
"0","      obesity_percent < 25 ~ ""Normal"","
"0","      obesity_percent >= 25 & obesity_percent < 35 ~ ""Obese"","
"0","      obesity_percent >= 35 ~ ""Severely Obese"""
"0","    )"
"0","  )"
"0",""
"0","# --- 2. Extract Top Predictors Per Group ---------------------------------"
"0",""
"0","get_group_importance <- function(data, group_var, group_levels, top_n = 15) {"
"0","  all_varimps <- list()"
"0","  skipped_groups <- c()"
"0",""
"0","  for (level in group_levels) {"
"0","    subset_data <- data %>% filter(.data[[group_var]] == level)"
"0",""
"0","    if (n_distinct(subset_data$gallstone_status) < 2) {"
"0","      skipped_groups <- c(skipped_groups, level)"
"0","      next"
"0","    }"
"0",""
"0","    subset_data <- subset_data %>% select(where(~ n_distinct(.) > 1))"
"0","    subset_data$gallstone_status <- factor(subset_data$gallstone_status)"
"0",""
"0","    if (group_var %in% colnames(subset_data)) {"
"0","      subset_data <- subset_data %>% select(-all_of(group_var))"
"0","    }"
"0",""
"0","    model <- train(gallstone_status ~ ., data = subset_data, method = ""gbm"", verbose = FALSE)"
"0",""
"0","    vi <- varImp(model)$importance"
"0","    vi$Variable <- rownames(vi)"
"0","    vi <- vi %>%"
"0","      arrange(desc(Overall)) %>%"
"0","      slice_max(order_by = Overall, n = top_n, with_ties = FALSE)"
"0","    vi$Group <- level"
"0","    all_varimps[[level]] <- vi"
"0","  }"
"0",""
"0","  if (length(skipped_groups) > 0) {"
"0","    message(""Skipped groups due to constant outcome: "", paste(skipped_groups, collapse = "", ""))"
"0","  }"
"0",""
"0","  bind_rows(all_varimps)"
"0","}"
"0",""
"0","top_obesity <- get_group_importance(raw_data, ""obesity_class"", unique(raw_data$obesity_class))"
"0","top_age     <- get_group_importance(raw_data, ""age_group"", unique(raw_data$age_group))"
"0",""
"0","# --- 3. Clean Variable Names with Label Map ------------------------------"
"0",""
"0","top_obesity <- top_obesity %>%"
"0","  left_join(labels_variables, by = c(""Variable"" = ""name"")) %>%"
"0","  mutate(Variable = coalesce(label, Variable)) %>%"
"0","  select(-label)"
"0",""
"0","top_age <- top_age %>%"
"0","  left_join(labels_variables, by = c(""Variable"" = ""name"")) %>%"
"0","  mutate(Variable = coalesce(label, Variable)) %>%"
"0","  select(-label)"
"0",""
"0",""
"0","# --- 4. Generate Obisity Plot -------------------------------"
"0",""
"0",""
"0","# Optional: set custom colors for clarity"
"0","group_colors <- c(""Normal"" = ""tomato"", ""Obese"" = ""forestgreen"", ""Severely Obese"" = ""steelblue"")"
"0",""
"0","# Filter and reorder each group individually"
"0","g1 <- top_obesity %>%"
"0","  filter(Group == ""Normal"") %>%"
"0","  arrange(Overall) %>%"
"0","  mutate(Variable = factor(Variable, levels = Variable))"
"0",""
"0","g2 <- top_obesity %>%"
"0","  filter(Group == ""Obese"") %>%"
"0","  arrange(Overall) %>%"
"0","  mutate(Variable = factor(Variable, levels = Variable))"
"0",""
"0","g3 <- top_obesity %>%"
"0","  filter(Group == ""Severely Obese"") %>%"
"0","  arrange(Overall) %>%"
"0","  mutate(Variable = factor(Variable, levels = Variable))"
"0",""
"0","ggplot() +"
"0","  geom_col(data = g1, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +"
"0","  geom_col(data = g2, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +"
"0","  geom_col(data = g3, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +"
"0","  facet_wrap(~ Group, scales = ""free"", nrow = 1) +"
"0","  coord_flip() +"
"0","  scale_fill_manual(values = group_colors) +"
"0","  labs(x = NULL, y = ""Importance"", title = ""Top Predictors by Obesity Class"") +"
"0","  theme_minimal(base_size = 13) +"
"0","  theme("
"0","    strip.text = element_text(size = 12, face = ""bold""),"
"0","    axis.text.x = element_text(size = 9, angle = 45, hjust = 1),"
"0","    axis.ticks.x = element_line(),"
"0","    panel.grid.major.x = element_line()"
"0","  )"
