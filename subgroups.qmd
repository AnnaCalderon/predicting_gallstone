---
title: "Uncovering Predictors of Gallstone Disease Across Age, Sex, and Obesity Subgroups"
author: "Anna Calderon"
date: "`r Sys.Date()`"
format:
  html:
    code-fold: true
---



## Subgroup Analysis Overview

Rather than building a single predictive model, this analysis focuses on **subgroup-level exploration** to identify how important predictors of gallstone disease may differ based on individual characteristics.

### Objectives:
- Understand which predictors are **most important** within each subgroup using **Gradient Boosted Machines (GBM)**.
- Assess whether predictors are **positively or negatively associated** with gallstone status using **logistic regression coefficients**.
- Visualize the **top 8–15 variables** per group to highlight contrasts between groups.

### Why Subgroups?
Exploring model results by subgroups allows us to:
- Identify predictors that may be more relevant in **specific populations** (e.g., hepatic fat in older adults vs cholesterol in younger women).
- Support **personalized health recommendations** by uncovering **distinct risk profiles**.

This approach aligns with **precision medicine**, which emphasizes tailoring diagnostics and interventions based on characteristics like age, sex, and body composition.


```{r}
#| include: false
library(tidyverse)
library(caret)
library(janitor)
library(corrplot)
library(e1071)
library(randomForest)
library(glmnet)
library(xgboost)
library(naivebayes)
library(pROC)
library(GGally)
library(knitr)
library(kableExtra)
library(gbm)
library(readxl)
```

```{r}
#| include: false
# Load your cleaned dataset
raw_data1 <- read_xlsx("data/dataset-uci.xlsx")  # update path

# Convert target to factor with valid R variable names
raw_data <- raw_data1 %>%
  clean_names() %>% 
  mutate(gallstone_status = factor(gallstone_status, levels = c(0, 1), labels = c("no", "yes")))



labels_variables <- raw_data %>% 
  mutate(across(everything(), as.character)) %>% 
  pivot_longer(everything(),
               names_to = "variable",
               values_to = "value") %>% 
    distinct(variable) %>% 
  mutate(id = row_number()) %>% 
  left_join(raw_data1 %>% 
  pivot_longer(everything(),
               names_to = "variable",
               values_to = "value") %>% 
   distinct(variable) %>% 
    mutate(id = row_number()), by = join_by(id)) %>% 
  select(-id) %>% 
  rename(name = variable.x, 
         label = variable.y) %>% 
  mutate(label = str_trim(str_remove(label, "\\s*\\(.*\\)"))) %>% 
  mutate(
    label = case_when(
      name == "body_mass_index_bmi" ~ "BMI",
      name == "hepatic_fat_accumulation_hfa" ~ "Hepatic Fat",
      name == "high_density_lipoprotein_hdl" ~ "HDL (Good)",
      name == "low_density_lipoprotein_ldl" ~ "LDL (Bad)",
      name == "total_cholesterol_tc" ~ "Total Cholesterol",
      name == "alanin_aminotransferaz_alt" ~ "ALT",
      name == "aspartat_aminotransferaz_ast" ~ "AST",
      name == "alkaline_phosphatase_alp" ~ "ALP",
      name == "c_reactive_protein_crp" ~ "C-Reactive Protein",
      name == "body_protein_content_protein_percent" ~ "Protein",
      name == "glomerular_filtration_rate_gfr" ~ "GFR",
      name == "extracellular_fluid_total_body_water_ecf_tbw" ~ "ECF/TBW",
      name == "intracellular_water_icw" ~"Intracellular Water",
      name == "extracellular_water_ecw" ~ "Extracellular Water",
      name == "total_body_water_tbw" ~ "Total Body Water",
      name == "visceral_muscle_area_vma_kg" ~ "Visceral Muscle Area",
      .default = label
    )
  )



```

### Sex-Specific Predictors

To examine whether predictive factors differ by sex, separate gradient boosting models were trained for males and females. As shown in the visualization below, **C-Reactive Protein (CRP)** emerged as the top predictor for both sexes, but its relative importance was much higher in females (100%) compared to males (also 100%, but with a smaller drop-off across other variables). Other predictors like **Vitamin D**, **Extracellular Water**, and **Hemoglobin** also showed distinct patterns between groups.

**Key Insight**:  
CRP, Vitamin D, and protein-related metrics appear to be more influential in women, suggesting potential physiological or hormonal differences in gallstone susceptibility.

```{r}
#| include: false
#| warning: false
library(caret)
library(dplyr)
library(ggplot2)
library(forcats)
library(patchwork)

group_colors <- c("Normal" = "tomato", "Obese" = "forestgreen", "Severely Obese" = "steelblue")


# Assuming raw_data and variable_labels are already loaded

# 1. Split data by gender
data_male <- raw_data %>% filter(gender == 0)
data_female <- raw_data %>% filter(gender == 1)

# # 2. Drop columns with zero variance
# drop_zero_var <- function(df) {
#   nzv <- nearZeroVar(df, saveMetrics = TRUE)
#   df[, !nzv$zeroVar]
# }

# data_male <- drop_zero_var(data_male)
# data_female <- drop_zero_var(data_female)

# 3. Train GBM models
set.seed(123)
gbm_male <- train(gallstone_status ~ ., data = data_male, method = "gbm", verbose = FALSE)
gbm_female <- train(gallstone_status ~ ., data = data_female, method = "gbm", verbose = FALSE)

```

```{r}
library(caret)
library(tidyverse)
library(forcats)


# Extract and label variable importance
male_imp_df <- varImp(gbm_male)$importance %>%
  rownames_to_column("Variable") %>%
  left_join(labels_variables, by = c("Variable" = "name")) %>%
  mutate(
    Variable = coalesce(label, Variable),
    Group = "Male"
  ) %>%
  select(-label) %>%
  arrange(desc(Overall)) %>%
  head(8) %>%
  mutate(
    Variable = factor(Variable, levels = rev(Variable)),
    RelativeImportance = 100 * Overall / max(Overall)
  )

female_imp_df <- varImp(gbm_female)$importance %>%
  rownames_to_column("Variable") %>%
  left_join(labels_variables, by = c("Variable" = "name")) %>%
  mutate(
    Variable = coalesce(label, Variable),
    Group = "Female"
  ) %>%
  select(-label) %>%
  arrange(desc(Overall)) %>%
  head(8) %>%
  mutate(
    Variable = factor(Variable, levels = rev(Variable)),
    RelativeImportance = 100 * Overall / max(Overall)
  )

# Combine datasets
# imp_sex_df <- bind_rows(male_imp_df, female_imp_df)

# Plot: Female
female_plot <- ggplot(female_imp_df, aes(x = Variable, y = RelativeImportance)) +
  geom_col(fill = "salmon") +
  geom_text(aes(label = paste0(round(RelativeImportance, 1), "%")),
            hjust = 1.1, color = "white", size = 3) +
  labs(
    title = "Top Predictors of Gallstones by Sex",
    subtitle = "Female",
    y = NULL,
    x = NULL
  ) +
  theme_minimal(base_size = 14) +
  theme(axis.text.y = element_text(size = 10),
        plot.title.position = "plot",           # aligns title relative to plot, not panel
        plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5) ) + 
  coord_flip()

# Plot: Male
male_plot <- ggplot(male_imp_df, aes(x = Variable, y = RelativeImportance)) +
  geom_col(fill = "steelblue") +
  geom_text(aes(label = paste0(round(RelativeImportance, 1), "%")),
            hjust = 1.1, color = "white", size = 3) +
  labs(
    title = NULL,
    subtitle = "Male",
    y = "Variable Importance (%)",
    x = NULL
  ) +
  theme_minimal(base_size = 14) +
  theme(axis.text.y = element_text(size = 10),
        plot.title.position = "plot",           # aligns title relative to plot, not panel
        plot.subtitle = element_text(hjust = 0.5) ) + 
  coord_flip()

# Combine vertically
female_plot / male_plot

```

### Stratify by Obesity Class

Next, we stratified the dataset by obesity class—defined using body fat percentage—as **Normal**, **Obese**, and **Severely Obese**. Separate models for each group reveal that **CRP** remains a consistently strong predictor, but the relative importance of other features such as **Triglycerides**, **ECF/TBW**, and **Hemoglobin** varies across categories.

**Key Insight**:  
In severely obese individuals, inflammatory markers and metabolic factors gain more importance, possibly reflecting the compounding effects of systemic inflammation.

```{r}
#| include: false
# Load packages
library(caret)
library(dplyr)
library(ggplot2)
library(forcats)
library(patchwork)
library(purrr)

# --- 1. Create Age & Obesity Groups --------------------------------------

raw_data <- raw_data %>%
  mutate(
    age_group = case_when(
      age < 40 ~ "<40",
      age >= 40 & age < 60 ~ "40–59",
      age >= 60 ~ "60+"
    ),
    obesity_class = case_when(
      obesity_percent < 25 ~ "Normal",
      obesity_percent >= 25 & obesity_percent < 35 ~ "Obese",
      obesity_percent >= 35 ~ "Severely Obese"
    )
  )

# --- 2. Extract Top Predictors Per Group ---------------------------------

get_group_importance <- function(data, group_var, group_levels, top_n = 15) {
  all_varimps <- list()
  skipped_groups <- c()

  for (level in group_levels) {
    subset_data <- data %>% filter(.data[[group_var]] == level)

    if (n_distinct(subset_data$gallstone_status) < 2) {
      skipped_groups <- c(skipped_groups, level)
      next
    }

    subset_data <- subset_data %>% select(where(~ n_distinct(.) > 1))
    subset_data$gallstone_status <- factor(subset_data$gallstone_status)

    if (group_var %in% colnames(subset_data)) {
      subset_data <- subset_data %>% select(-all_of(group_var))
    }

    model <- train(gallstone_status ~ ., data = subset_data, method = "gbm", verbose = FALSE)

    vi <- varImp(model)$importance
    vi$Variable <- rownames(vi)
    vi <- vi %>%
      arrange(desc(Overall)) %>%
      slice_max(order_by = Overall, n = top_n, with_ties = FALSE)
    vi$Group <- level
    all_varimps[[level]] <- vi
  }

  if (length(skipped_groups) > 0) {
    message("Skipped groups due to constant outcome: ", paste(skipped_groups, collapse = ", "))
  }

  bind_rows(all_varimps)
}

top_obesity <- get_group_importance(raw_data, "obesity_class", unique(raw_data$obesity_class))
top_age     <- get_group_importance(raw_data, "age_group", unique(raw_data$age_group))

# --- 3. Clean Variable Names with Label Map ------------------------------

top_obesity <- top_obesity %>%
  left_join(labels_variables, by = c("Variable" = "name")) %>%
  mutate(Variable = coalesce(label, Variable)) %>%
  select(-label)

top_age <- top_age %>%
  left_join(labels_variables, by = c("Variable" = "name")) %>%
  mutate(Variable = coalesce(label, Variable)) %>%
  select(-label)






```


```{r}

# ---  Generate Obisity Plot -------------------------------


# Optional: set custom colors for clarity
group_colors <- c("Normal" = "tomato", "Obese" = "forestgreen", "Severely Obese" = "steelblue")

# Filter and reorder each group individually
g1 <- top_obesity %>%
  filter(Group == "Normal") %>%
  arrange(Overall) %>%
  mutate(Variable = factor(Variable, levels = Variable))

g2 <- top_obesity %>%
  filter(Group == "Obese") %>%
  arrange(Overall) %>%
  mutate(Variable = factor(Variable, levels = Variable))

g3 <- top_obesity %>%
  filter(Group == "Severely Obese") %>%
  arrange(Overall) %>%
  mutate(Variable = factor(Variable, levels = Variable))

ggplot() +
  geom_col(data = g1, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +
  geom_col(data = g2, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +
  geom_col(data = g3, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +
  facet_wrap(~ Group, scales = "free", nrow = 1) +
  coord_flip() +
  scale_fill_manual(values = group_colors) +
  labs(x = NULL, y = "Importance", title = "Top Predictors by Obesity Class") +
  theme_minimal(base_size = 13) +
  theme(
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9, angle = 45, hjust = 1),
    axis.ticks.x = element_line(),
    panel.grid.major.x = element_line()
  )


```

### Stratify by Age Class
Finally, models were trained across age categories: **<40**, **40–59**, and **60+ years**. Again, **CRP** consistently tops the list across all age brackets, but we see shifting roles in variables like **Creatinine**, **Triglycerides**, **ALT**, and **Vitamin D**.

**Key Insight**:  
While CRP remains central, aging appears to increase the role of **kidney function** and **lipid metabolism** markers in predicting gallstones, especially in the 60+ age group.
```{r}
# --- 6. Generate Age Plot -------------------------------
# Optional: set custom colors for clarity
group_colors <- c("<40" = "tomato", "40–59" = "forestgreen", "60+" = "steelblue")

      # age < 40 ~ "<40",
      # age >= 40 & age < 60 ~ "40–59",
      # age >= 60 ~ "60+"
# Filter and reorder each group individually
g1 <- top_age %>%
  filter(Group == "<40") %>%
  arrange(Overall) %>%
  mutate(Variable = factor(Variable, levels = Variable))

g2 <- top_age %>%
  filter(Group == "40–59") %>%
  arrange(Overall) %>%
  mutate(Variable = factor(Variable, levels = Variable))

g3 <- top_age %>%
  filter(Group == "60+") %>%
  arrange(Overall) %>%
  mutate(Variable = factor(Variable, levels = Variable))

ggplot() +
  geom_col(data = g1, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +
  geom_col(data = g2, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +
  geom_col(data = g3, aes(x = Variable, y = Overall, fill = Group), show.legend = FALSE) +
  facet_wrap(~ Group, scales = "free", nrow = 1) +
  coord_flip() +
  scale_fill_manual(values = group_colors) +
  labs(x = NULL, y = "Importance", title = "Top Predictors by Age Class") +
  theme_minimal(base_size = 13) +
  theme(
    strip.text = element_text(size = 9, face = "bold"),
    axis.text.x = element_text(size = 9, angle = 45, hjust = 1),
    axis.ticks.x = element_line(),
    panel.grid.major.x = element_line()
  )
```


```{r}
#| eval: false
#| include: false

### Interaction Effects
# 
# Explore if the effect of CRP depends on BMI or gender, using a simple logistic model with interaction terms. \## Code for CRP × BMI or CRP × Gender

# # CRP x BMI interaction
# model_crp_bmi <- glm(gallstone_status ~ c_reactive_protein_crp * body_mass_index_bmi,
#                      data = raw_data, family = binomial)
# summary(model_crp_bmi)
# 
# # CRP x Gender interaction
# model_crp_gender <- glm(gallstone_status ~ c_reactive_protein_crp * gender,
#                         data = raw_data, family = binomial)
# summary(model_crp_gender)

```

## Summary of the Dataset and Original Study

This analysis is based on data from the **UCI Gallbladder Disease Dataset**, originally published by Kocaay et al. (2020) in their clinical study on predicting gallstone disease using bioelectrical impedance and clinical markers.

- **Study Title:** *"Can Bioelectrical Impedance Analysis Be a New and Reliable Method for the Diagnosis of Gallstone Disease?"*
- **Authors:** Kocaay et al., 2020  
- **Link to dataset:** [https://archive.ics.uci.edu/ml/datasets/Gallbladder+Disease](https://archive.ics.uci.edu/ml/datasets/Gallbladder+Disease)  
- **DOI:** [10.14744/tjtes.2019.17317](https://doi.org/10.14744/tjtes.2019.17317)

The dataset contains information on 540 patients, including:
- Demographic features: age, sex  
- Body composition: BMI, visceral fat, hepatic fat, lean mass  
- Biochemical markers: cholesterol, glucose, ALT, AST, etc.  
- Target variable: gallstone status (present vs absent)

The goal of the original study was to assess whether **body composition metrics could improve the diagnosis of gallstone disease**.

